!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FIELD_DESCRIPTION!XML	uri	/uri associated with name prefix/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!CSS	c,class	/classes/
!_TAG_KIND_DESCRIPTION!CSS	i,id	/identities/
!_TAG_KIND_DESCRIPTION!CSS	s,selector	/selectors/
!_TAG_KIND_DESCRIPTION!Iniconf	k,key	/keys/
!_TAG_KIND_DESCRIPTION!Iniconf	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!SVG	d,def	/ids in defs tags/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!XML	i,id	/id attributes/
!_TAG_KIND_DESCRIPTION!XML	n,nsprefix	/namespace prefixes/
!_TAG_KIND_DESCRIPTION!XML	r,root	/root elements/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!CSS	0.0	/current.age/
!_TAG_PARSER_VERSION!Iniconf	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PARSER_VERSION!SVG	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!XML	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/jlanzone01/Documents/Code/scrapeghost/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20230611.0/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
0.1.0 - 2023-03-17	docs/changelog.md	/^## 0.1.0 - 2023-03-17$/;"	s	chapter:Changelog
0.2.0 - 2023-03-18	docs/changelog.md	/^## 0.2.0 - 2023-03-18$/;"	s	chapter:Changelog
0.3.0 - 2023-03-20	docs/changelog.md	/^## 0.3.0 - 2023-03-20$/;"	s	chapter:Changelog
0.4.0 - 2023-03-24	docs/changelog.md	/^## 0.4.0 - 2023-03-24$/;"	s	chapter:Changelog
0.4.1 - 2023-03-24	docs/changelog.md	/^## 0.4.1 - 2023-03-24$/;"	s	chapter:Changelog
0.4.2 - 2023-03-26	docs/changelog.md	/^## 0.4.2 - 2023-03-26$/;"	s	chapter:Changelog
0.4.4 - 2023-03-31	docs/changelog.md	/^## 0.4.4 - 2023-03-31$/;"	s	chapter:Changelog
0.5.0 - 2023-06-06	docs/changelog.md	/^## 0.5.0 - 2023-06-06$/;"	s	chapter:Changelog
0.5.1 - 2023-06-13	docs/changelog.md	/^## 0.5.1 - 2023-06-13$/;"	s	chapter:Changelog
1. Correction	docs/code_of_conduct.md	/^### 1. Correction$/;"	S	section:Code of Conduct""Enforcement Guidelines
2. Warning	docs/code_of_conduct.md	/^### 2. Warning$/;"	S	section:Code of Conduct""Enforcement Guidelines
3. Temporary Ban	docs/code_of_conduct.md	/^### 3. Temporary Ban$/;"	S	section:Code of Conduct""Enforcement Guidelines
4. Permanent Ban	docs/code_of_conduct.md	/^### 4. Permanent Ban$/;"	S	section:Code of Conduct""Enforcement Guidelines
:root>*	docs/assets/extra.css	/^:root>* {$/;"	s
API Keys	docs/openai.md	/^## API Keys$/;"	s	chapter:OpenAI / GPT
API Reference	docs/api.md	/^# API Reference$/;"	c
About	docs/index.md	/^# About$/;"	c
Altering the API / Model	docs/usage.md	/^### Altering the API \/ Model $/;"	S	section:Usage""Customization
Altering the Instructions to GPT	docs/usage.md	/^### Altering the Instructions to GPT$/;"	S	section:Usage""Customization
Attribution	docs/code_of_conduct.md	/^## Attribution$/;"	s	chapter:Code of Conduct
Auto-splitting	docs/usage.md	/^### Auto-splitting$/;"	S	section:Usage""Data Flow
BadStop	src/scrapeghost/errors.py	/^class BadStop(ScrapeghostError):$/;"	c
CSS	src/scrapeghost/preprocessors.py	/^class CSS:$/;"	c
Can I use `httpx`? Or `selenium`/`playwright`? Can I customize the headers, etc.?	docs/faq.md	/^## Can I use `httpx`? Or `selenium`\/`playwright`? Can I customize the headers, etc.?$/;"	s	chapter:FAQ
Changelog	docs/changelog.md	/^# Changelog$/;"	c
CleanHTML	src/scrapeghost/preprocessors.py	/^class CleanHTML:$/;"	c
Code of Conduct	docs/code_of_conduct.md	/^# Code of Conduct$/;"	c
Command Line Interface	docs/cli.md	/^# Command Line Interface$/;"	c
Command Line Usage Example	docs/index.md	/^### Command Line Usage Example$/;"	S	section:About""Quickstart
Configuration	docs/cli.md	/^## Configuration$/;"	s	chapter:Command Line Interface
Costs	docs/openai.md	/^## Costs$/;"	s	chapter:OpenAI / GPT
CrewMember	docs/examples/pydantic_example.py	/^class CrewMember(BaseModel):$/;"	c
CrewMember	tests/test_pydantic.py	/^class CrewMember(BaseModel):$/;"	c
CrewMemberExtended	tests/test_pydantic.py	/^class CrewMemberExtended(CrewMember):$/;"	c
Customization	docs/usage.md	/^## Customization$/;"	s	chapter:Usage
Data Flow	docs/usage.md	/^## Data Flow$/;"	s	chapter:Usage
Dealing With Page Structure Changes	docs/tutorial.md	/^### Dealing With Page Structure Changes$/;"	S	section:Tutorial""Writing a Scraper
Does the model "hallucinate" data?	docs/faq.md	/^## Does the model "hallucinate" data?$/;"	s	chapter:FAQ
Enforcement	docs/code_of_conduct.md	/^## Enforcement$/;"	s	chapter:Code of Conduct
Enforcement Guidelines	docs/code_of_conduct.md	/^## Enforcement Guidelines$/;"	s	chapter:Code of Conduct
Enforcement Responsibilities	docs/code_of_conduct.md	/^## Enforcement Responsibilities$/;"	s	chapter:Code of Conduct
Enhancing the Schema	docs/tutorial.md	/^### Enhancing the Schema$/;"	S	section:Tutorial""Writing a Scraper
Exceptions	docs/api.md	/^## Exceptions$/;"	s	chapter:API Reference
Extra Instructions	docs/tutorial.md	/^### Extra Instructions$/;"	S	section:Tutorial""Writing a Scraper
FAQ	docs/faq.md	/^# FAQ $/;"	c
Features	README.md	/^## Features$/;"	s	chapter:scrapeghost
Features	docs/index.md	/^## Features$/;"	s	chapter:About
Getting Episode Details	docs/tutorial.md	/^### Getting Episode Details$/;"	S	section:Tutorial""Writing a Scraper
Getting a List of Episodes	docs/tutorial.md	/^## Getting a List of Episodes$/;"	s	chapter:Tutorial
Getting an API Key	docs/snippets/_apikey.md	/^### Getting an API Key$/;"	S
HTTP Requests	docs/usage.md	/^### HTTP Requests$/;"	S	section:Usage""Customization
HallucinationChecker	src/scrapeghost/postprocessors.py	/^class HallucinationChecker:$/;"	c
Hippocratic License	LICENSE.md	/^# Hippocratic License$/;"	c
Hippocratic License	docs/LICENSE.md	/^# Hippocratic License$/;"	c
How much did you spend developing this?	docs/faq.md	/^## How much did you spend developing this?$/;"	s	chapter:FAQ
Install `scrapeghost`	docs/tutorial.md	/^### Install `scrapeghost`$/;"	S	section:Tutorial""Prerequisites
InvalidJSON	src/scrapeghost/errors.py	/^class InvalidJSON(ScrapeghostError):$/;"	c
Is this practical? Or just a toy?	docs/faq.md	/^## Is this practical? Or just a toy?$/;"	s	chapter:FAQ
JSONPostprocessor	src/scrapeghost/postprocessors.py	/^class JSONPostprocessor:$/;"	c
MaxCostExceeded	src/scrapeghost/errors.py	/^class MaxCostExceeded(ScrapeghostError):$/;"	c
Model	src/scrapeghost/models.py	/^class Model:$/;"	c
ModelWithManyTypes	tests/test_pydantic.py	/^class ModelWithManyTypes(BaseModel):$/;"	c
Next Steps	docs/tutorial.md	/^## Next Steps$/;"	s	chapter:Tutorial
OpenAI / GPT	docs/openai.md	/^# OpenAI \/ GPT$/;"	c
OpenAiCall	src/scrapeghost/apicall.py	/^class OpenAiCall:$/;"	c
Our Pledge	docs/code_of_conduct.md	/^## Our Pledge$/;"	s	chapter:Code of Conduct
Our Standards	docs/code_of_conduct.md	/^## Our Standards$/;"	s	chapter:Code of Conduct
PaginatedSchemaScraper	src/scrapeghost/scrapers.py	/^class PaginatedSchemaScraper(SchemaScraper):$/;"	c
Pagination	docs/usage.md	/^## Pagination$/;"	s	chapter:Usage
PostprocessingError	src/scrapeghost/errors.py	/^class PostprocessingError(ScrapeghostError):$/;"	c
Postprocessor	src/scrapeghost/apicall.py	/^Postprocessor = Callable[[Response, "OpenAiCall"], Response]$/;"	v
Postprocessors	docs/usage.md	/^## Postprocessors$/;"	s	chapter:Usage
Preprocessor	src/scrapeghost/preprocessors.py	/^Preprocessor = Callable[[lxml.html.HtmlElement], list[lxml.html.HtmlElement]]$/;"	v
PreprocessorError	src/scrapeghost/errors.py	/^class PreprocessorError(ScrapeghostError):$/;"	c
Preprocessors	docs/tutorial.md	/^### Preprocessors$/;"	S	section:Tutorial""Writing a Scraper
Preprocessors	docs/usage.md	/^### Preprocessors$/;"	S	section:Usage""Customization
Prerequisites	docs/tutorial.md	/^## Prerequisites$/;"	s	chapter:Tutorial
Prompts	docs/openai.md	/^## Prompts$/;"	s	chapter:OpenAI / GPT
Putting it all Together	docs/tutorial.md	/^## Putting it all Together$/;"	s	chapter:Tutorial
PydanticPostprocessor	src/scrapeghost/postprocessors.py	/^class PydanticPostprocessor:$/;"	c
Quickstart	docs/index.md	/^## Quickstart$/;"	s	chapter:About
RETRY_ERRORS	src/scrapeghost/apicall.py	/^RETRY_ERRORS = ($/;"	v
Response	src/scrapeghost/responses.py	/^class Response:$/;"	c
RetryRule	src/scrapeghost/apicall.py	/^class RetryRule:$/;"	c
SchemaScraper	src/scrapeghost/scrapers.py	/^class SchemaScraper(OpenAiCall):$/;"	c
Scope	docs/code_of_conduct.md	/^## Scope$/;"	s	chapter:Code of Conduct
ScrapeResponse	src/scrapeghost/responses.py	/^class ScrapeResponse(Response):$/;"	c
ScrapeghostError	src/scrapeghost/errors.py	/^class ScrapeghostError(Exception):$/;"	c
Tokens	docs/openai.md	/^## Tokens$/;"	s	chapter:OpenAI / GPT
TooManyTokens	src/scrapeghost/errors.py	/^class TooManyTokens(ScrapeghostError):$/;"	c
Tutorial	docs/tutorial.md	/^# Tutorial$/;"	c
Usage	docs/cli.md	/^## Usage$/;"	s	chapter:Command Line Interface
Usage	docs/usage.md	/^# Usage$/;"	c
Using `pydantic` Models	docs/usage.md	/^### Using `pydantic` Models$/;"	S	section:Usage""Postprocessors
Using your key	docs/snippets/_apikey.md	/^### Using your key$/;"	S
What Are Tokens?	docs/tutorial.md	/^### What Are Tokens?$/;"	S	section:Tutorial""Writing a Scraper
What are the disadvantages?	docs/faq.md	/^## What are the disadvantages?$/;"	s	chapter:FAQ
What can I do if a page is too big?	docs/faq.md	/^## What can I do if a page is too big?$/;"	s	chapter:FAQ
What's with the license?	docs/faq.md	/^## What's with the license?$/;"	s	chapter:FAQ
Why not ask the scraper to write CSS / XPath selectors?	docs/faq.md	/^## Why not ask the scraper to write CSS \/ XPath selectors?$/;"	s	chapter:FAQ
Why not use a different model?	docs/faq.md	/^## Why not use a different model?$/;"	s	chapter:FAQ
Why would I use this instead of a traditional scraper?	docs/faq.md	/^## Why would I use this instead of a traditional scraper?$/;"	s	chapter:FAQ
Writing a Scraper	docs/tutorial.md	/^## Writing a Scraper$/;"	s	chapter:Tutorial
XPath	src/scrapeghost/preprocessors.py	/^class XPath:$/;"	c
__call__	src/scrapeghost/postprocessors.py	/^    def __call__(self, response: Response, scraper: OpenAiCall) -> Response:$/;"	m	class:HallucinationChecker	typeref:typename:Response
__call__	src/scrapeghost/postprocessors.py	/^    def __call__(self, response: Response, scraper: OpenAiCall) -> Response:$/;"	m	class:JSONPostprocessor	typeref:typename:Response
__call__	src/scrapeghost/postprocessors.py	/^    def __call__(self, response: Response, scraper: OpenAiCall) -> Response:$/;"	m	class:PydanticPostprocessor	typeref:typename:Response
__call__	src/scrapeghost/preprocessors.py	/^    def __call__(self, doc: lxml.html.Element) -> lxml.html.Element:$/;"	m	class:CleanHTML	typeref:typename:lxml.html.Element
__call__	src/scrapeghost/preprocessors.py	/^    def __call__(self, node: lxml.html.HtmlElement) -> list[lxml.html.HtmlElement]:$/;"	m	class:CSS	typeref:typename:list[lxml.html.HtmlElement]
__call__	src/scrapeghost/preprocessors.py	/^    def __call__(self, node: lxml.html.HtmlElement) -> list[lxml.html.HtmlElement]:$/;"	m	class:XPath	typeref:typename:list[lxml.html.HtmlElement]
__call__	src/scrapeghost/scrapers.py	/^    __call__ = scrape$/;"	v	class:SchemaScraper	file:
__init__	src/scrapeghost/apicall.py	/^    def __init__($/;"	m	class:OpenAiCall
__init__	src/scrapeghost/postprocessors.py	/^    def __init__(self, model: type):$/;"	m	class:PydanticPostprocessor
__init__	src/scrapeghost/postprocessors.py	/^    def __init__(self, nudge: bool = True):$/;"	m	class:JSONPostprocessor
__init__	src/scrapeghost/preprocessors.py	/^    def __init__(self, **kwargs: dict) -> None:$/;"	m	class:CleanHTML	typeref:typename:None
__init__	src/scrapeghost/preprocessors.py	/^    def __init__(self, css: str):$/;"	m	class:CSS
__init__	src/scrapeghost/preprocessors.py	/^    def __init__(self, xpath: str):$/;"	m	class:XPath
__init__	src/scrapeghost/scrapers.py	/^    def __init__($/;"	m	class:SchemaScraper
__init__	src/scrapeghost/scrapers.py	/^    def __init__(self, schema: list | str | dict, **kwargs: Any):$/;"	m	class:PaginatedSchemaScraper
__str__	src/scrapeghost/postprocessors.py	/^    def __str__(self) -> str:  # pragma: no cover$/;"	m	class:HallucinationChecker	typeref:typename:str
__str__	src/scrapeghost/postprocessors.py	/^    def __str__(self) -> str:  # pragma: no cover$/;"	m	class:PydanticPostprocessor	typeref:typename:str
__str__	src/scrapeghost/postprocessors.py	/^    def __str__(self) -> str:$/;"	m	class:JSONPostprocessor	typeref:typename:str
__str__	src/scrapeghost/preprocessors.py	/^    def __str__(self) -> str:$/;"	m	class:CSS	typeref:typename:str
__str__	src/scrapeghost/preprocessors.py	/^    def __str__(self) -> str:$/;"	m	class:CleanHTML	typeref:typename:str
__str__	src/scrapeghost/preprocessors.py	/^    def __str__(self) -> str:$/;"	m	class:XPath	typeref:typename:str
_api_request	src/scrapeghost/apicall.py	/^    def _api_request(self, html: str) -> Response:$/;"	m	class:OpenAiCall	typeref:typename:Response
_apply_postprocessors	src/scrapeghost/apicall.py	/^    def _apply_postprocessors(self, response: Response) -> Response:$/;"	m	class:OpenAiCall	typeref:typename:Response
_apply_preprocessors	src/scrapeghost/scrapers.py	/^    def _apply_preprocessors($/;"	m	class:SchemaScraper	typeref:typename:list
_check_data_in_html	src/scrapeghost/postprocessors.py	/^def _check_data_in_html(html: str, d: dict | list | str, parent: str = "") -> None:$/;"	f	typeref:typename:None
_chunk_tags	src/scrapeghost/scrapers.py	/^def _chunk_tags(tags: list, max_tokens: int, model: str) -> list[str]:$/;"	f	typeref:typename:list[str]
_combine_responses	src/scrapeghost/scrapers.py	/^def _combine_responses($/;"	f	typeref:typename:ScrapeResponse
_default_postprocessors	src/scrapeghost/apicall.py	/^    _default_postprocessors: list[Postprocessor] = []$/;"	v	class:OpenAiCall	typeref:typename:list[Postprocessor]
_default_preprocessors	src/scrapeghost/scrapers.py	/^    _default_preprocessors: list[Preprocessor] = [$/;"	v	class:SchemaScraper	typeref:typename:list[Preprocessor]
_make_n_tokens	tests/test_apicall.py	/^def _make_n_tokens(n):$/;"	f
_mock_response	tests/testutils.py	/^def _mock_response(**kwargs):$/;"	f
_model_dict	src/scrapeghost/models.py	/^_model_dict = {model.name: model for model in models}$/;"	v
_parse_url_or_html	src/scrapeghost/scrapers.py	/^def _parse_url_or_html(url_or_html: str) -> lxml.html.Element:$/;"	f	typeref:typename:lxml.html.Element
_pydantic_to_simple_schema	src/scrapeghost/scrapers.py	/^def _pydantic_to_simple_schema(pydantic_model: Type[BaseModel]) -> dict:$/;"	f	typeref:typename:dict
_raw_api_request	src/scrapeghost/apicall.py	/^    def _raw_api_request($/;"	m	class:OpenAiCall	typeref:typename:Response
_timeout	tests/testutils.py	/^def _timeout(**kwargs):$/;"	f
_timeout_once	tests/test_apicall.py	/^    def _timeout_once(**kwargs):$/;"	f	function:test_normal_retry	file:
_tokens	src/scrapeghost/utils.py	/^def _tokens(model: str, html: str) -> int:$/;"	f	typeref:typename:int
_tostr	src/scrapeghost/utils.py	/^def _tostr(obj: lxml.html.HtmlElement) -> str:$/;"	f	typeref:typename:str
`BadStop`	docs/api.md	/^### `BadStop`$/;"	S	section:API Reference""Exceptions
`InvalidJSON`	docs/api.md	/^### `InvalidJSON`$/;"	S	section:API Reference""Exceptions
`MaxCostExceeded`	docs/api.md	/^### `MaxCostExceeded`$/;"	S	section:API Reference""Exceptions
`PreprocessorError`	docs/api.md	/^### `PreprocessorError`$/;"	S	section:API Reference""Exceptions
`SchemaScraper`	docs/api.md	/^## `SchemaScraper`$/;"	s	chapter:API Reference
`TooManyTokens`	docs/api.md	/^### `TooManyTokens`$/;"	S	section:API Reference""Exceptions
`scrape`	docs/api.md	/^## `scrape`$/;"	s	chapter:API Reference
actor_schema	tests/live/test_live.py	/^actor_schema = {$/;"	v
age	tests/test_pydantic.py	/^    age: int = 0$/;"	v	class:CrewMember	typeref:typename:int
api_key_is_set	tests/live/test_live.py	/^api_key_is_set = os.getenv("OPENAI_API_KEY", "")$/;"	v
api_key_is_set	tests/live/test_live_adversarial.py	/^api_key_is_set = os.getenv("OPENAI_API_KEY", "")$/;"	v
api_key_is_set	tests/live/test_live_cli.py	/^api_key_is_set = os.getenv("OPENAI_API_KEY", "")$/;"	v
api_key_is_set	tests/live/test_live_pagination.py	/^api_key_is_set = os.getenv("OPENAI_API_KEY", "")$/;"	v
api_key_is_set	tests/live/test_nudge_live.py	/^api_key_is_set = os.getenv("OPENAI_API_KEY", "")$/;"	v
api_responses	src/scrapeghost/responses.py	/^    api_responses: list = field(default_factory=list)$/;"	v	class:Response	typeref:typename:list
api_time	src/scrapeghost/responses.py	/^    api_time: float = 0$/;"	v	class:Response	typeref:typename:float
app	tests/live/test_live_cli.py	/^app = typer.Typer()$/;"	v
auto_split_length	src/scrapeghost/responses.py	/^    auto_split_length: int | None = None$/;"	v	class:ScrapeResponse	typeref:typename:int|None
clipPath2240	docs/assets/scrapeghost.svg	/^       id="clipPath2240">$/;"	d
clipPath2240	docs/assets/scrapeghost.svg	/^       id="clipPath2240">$/;"	i
clipPath2240-3	docs/assets/scrapeghost.svg	/^       id="clipPath2240-3">$/;"	d
clipPath2240-3	docs/assets/scrapeghost.svg	/^       id="clipPath2240-3">$/;"	i
clipPath9159	docs/assets/scrapeghost.svg	/^       id="clipPath9159">$/;"	d
clipPath9159	docs/assets/scrapeghost.svg	/^       id="clipPath9159">$/;"	i
cost	src/scrapeghost/models.py	/^    def cost(self, prompt_tokens: int, completion_tokens: int) -> float:$/;"	m	class:Model	typeref:typename:float
cost_estimate	src/scrapeghost/utils.py	/^def cost_estimate(html: str, model: str = "gpt-4") -> float:$/;"	f	typeref:typename:float
data	src/scrapeghost/responses.py	/^    data: dict | list | str = ""$/;"	v	class:Response	typeref:typename:dict|list|str
dave	tests/live/test_live.py	/^dave = """$/;"	v
defs2	docs/assets/scrapeghost.svg	/^     id="defs2">$/;"	i
disallow_untyped_defs	mypy.ini	/^disallow_untyped_defs=true$/;"	k	section:mypy
episode_data	docs/examples/tutorial/tutorial_final.py	/^episode_data = []$/;"	v
episode_list_scraper	docs/examples/tutorial/list_scraper_v1.py	/^episode_list_scraper = SchemaScraper({"episode_urls": ["str"]})$/;"	v
episode_list_scraper	docs/examples/tutorial/list_scraper_v2.py	/^episode_list_scraper = SchemaScraper($/;"	v
episode_list_scraper	docs/examples/tutorial/tutorial_final.py	/^episode_list_scraper = SchemaScraper($/;"	v
episode_scraper	docs/examples/tutorial/episode_scraper_1.py	/^episode_scraper = SchemaScraper(schema)$/;"	v
episode_scraper	docs/examples/tutorial/episode_scraper_2.py	/^episode_scraper = SchemaScraper($/;"	v
episode_scraper	docs/examples/tutorial/episode_scraper_3.py	/^episode_scraper = SchemaScraper($/;"	v
episode_scraper	docs/examples/tutorial/episode_scraper_4.py	/^episode_scraper = SchemaScraper($/;"	v
episode_scraper	docs/examples/tutorial/episode_scraper_5.py	/^episode_scraper = SchemaScraper($/;"	v
episode_scraper	docs/examples/tutorial/tutorial_final.py	/^episode_scraper = SchemaScraper($/;"	v
episode_urls	docs/examples/tutorial/list_scraper_v2.py	/^episode_urls = response.data$/;"	v
episode_urls	docs/examples/tutorial/tutorial_final.py	/^episode_urls = resp.data$/;"	v
examples	examples/legislators.py	/^examples = [$/;"	v
g2368	docs/assets/scrapeghost.svg	/^       clip-path="url(#clipPath9159)">$/;"	i
g2545	docs/assets/scrapeghost.svg	/^         id="g2545">$/;"	i
g266	docs/assets/scrapeghost.svg	/^           transform="translate(-0.02748909)">$/;"	i
get_urls	examples/ilga.py	/^def get_urls():$/;"	f
ignore_missing_imports	mypy.ini	/^ignore_missing_imports = true$/;"	k	section:mypy-lxml.*
ignore_missing_imports	mypy.ini	/^ignore_missing_imports = true/;"	k	section:mypy-lxml.html.*
inkscape	docs/assets/scrapeghost.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg">$/;"	n	uri:http://www.inkscape.org/namespaces/inkscape
layer1	docs/assets/scrapeghost.svg	/^     id="layer1">$/;"	i
logger	src/scrapeghost/utils.py	/^logger = structlog.get_logger("scrapeghost")$/;"	v
main	examples/ilga.py	/^def main():$/;"	f
main	examples/legislators.py	/^def main():$/;"	f
main	src/scrapeghost/cli.py	/^def main() -> None:  # pragma: no cover$/;"	f	typeref:typename:None
mask-powermask-path-effect2143_inverse	docs/assets/scrapeghost.svg	/^       y="-50">$/;"	d
mask-powermask-path-effect2143_inverse	docs/assets/scrapeghost.svg	/^       y="-50">$/;"	i
mask-powermask-path-effect2143_primitive1	docs/assets/scrapeghost.svg	/^         result="fbSourceGraphic" \/>$/;"	i
mask-powermask-path-effect2143_primitive2	docs/assets/scrapeghost.svg	/^         in="fbSourceGraphic" \/>$/;"	i
max_retries	src/scrapeghost/apicall.py	/^    max_retries: int = 0$/;"	v	class:RetryRule	typeref:typename:int
models	src/scrapeghost/models.py	/^models = [$/;"	v
mypy	mypy.ini	/^[mypy]$/;"	s
mypy-lxml.*	mypy.ini	/^[mypy-lxml.*]$/;"	s
mypy-lxml.html.*	mypy.ini	/^[mypy-lxml.html.*]$/;"	s
namedview7	docs/assets/scrapeghost.svg	/^     inkscape:current-layer="layer1" \/>$/;"	i
ns7c12e0800101	docs/assets/scrapeghost.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg">$/;"	n	uri:http://www.w3.org/2000/svg
nudge_json	src/scrapeghost/postprocessors.py	/^    def nudge_json(self, scraper: SchemaScraper, response: Response) -> Response:$/;"	m	class:JSONPostprocessor	typeref:typename:Response
page1	tests/live/test_live_pagination.py	/^page1 = """$/;"	v
page1	tests/test_pagination.py	/^page1 = """$/;"	v
page2	tests/live/test_live_pagination.py	/^page2 = """$/;"	v
page2	tests/test_pagination.py	/^page2 = """$/;"	v
page3	tests/live/test_live_pagination.py	/^page3 = """$/;"	v
page3	tests/test_pagination.py	/^page3 = """$/;"	v
parsed_html	src/scrapeghost/responses.py	/^    parsed_html: lxml.html.HtmlElement | None = None$/;"	v	class:ScrapeResponse	typeref:typename:lxml.html.HtmlElement|None
patch_create	tests/testutils.py	/^def patch_create():$/;"	f
path176	docs/assets/scrapeghost.svg	/^             r="0.14660895" \/>$/;"	i
path176-7	docs/assets/scrapeghost.svg	/^             r="0.14660895" \/>$/;"	i
path176-9	docs/assets/scrapeghost.svg	/^           ry="0.1649726" \/>$/;"	i
path178	docs/assets/scrapeghost.svg	/^       sodipodi:nodetypes="cccc" \/>$/;"	i
path2208	docs/assets/scrapeghost.svg	/^       ry="0.0023662183" \/>$/;"	i
path2242	docs/assets/scrapeghost.svg	/^         sodipodi:nodetypes="cccc" \/>$/;"	i
path2242-0	docs/assets/scrapeghost.svg	/^         sodipodi:nodetypes="cccc" \/>$/;"	i
path459	docs/assets/scrapeghost.svg	/^           transform="translate(9.536743e-8,-0.21896552)" \/>$/;"	i
path459-3	docs/assets/scrapeghost.svg	/^           ry="3.1202586" \/>$/;"	i
path459-5	docs/assets/scrapeghost.svg	/^           transform="matrix(1.0034513,0,0,0.99071205,-0.02191566,-0.16632247)" \/>$/;"	i
path9161	docs/assets/scrapeghost.svg	/^         sodipodi:nodetypes="cccc" \/>$/;"	i
request	src/scrapeghost/apicall.py	/^    def request(self, html: str) -> Response:$/;"	m	class:OpenAiCall	typeref:typename:Response
resp	docs/examples/tutorial/tutorial_final.py	/^resp = episode_list_scraper($/;"	v
resp	docs/examples/yoyodyne.py	/^resp = scraper.scrape(url)$/;"	v
resp1	tests/test_pagination.py	/^resp1 = _mock_response($/;"	v
resp2	tests/test_pagination.py	/^resp2 = _mock_response($/;"	v
resp3	tests/test_pagination.py	/^resp3 = _mock_response($/;"	v
response	docs/examples/tutorial/episode_scraper_1.py	/^response = episode_scraper(url)$/;"	v
response	docs/examples/tutorial/episode_scraper_2.py	/^response = episode_scraper(url)$/;"	v
response	docs/examples/tutorial/episode_scraper_3.py	/^response = episode_scraper(url)$/;"	v
response	docs/examples/tutorial/episode_scraper_4.py	/^response = episode_scraper(url)$/;"	v
response	docs/examples/tutorial/episode_scraper_5.py	/^response = episode_scraper(url)$/;"	v
response	docs/examples/tutorial/list_scraper_v2.py	/^response = episode_list_scraper($/;"	v
result	docs/examples/pydantic_example.py	/^result = scrape_crewmember.scrape($/;"	v
retry_errors	src/scrapeghost/apicall.py	/^    retry_errors: tuple = RETRY_ERRORS$/;"	v	class:RetryRule	typeref:typename:tuple
retry_wait	src/scrapeghost/apicall.py	/^    retry_wait: int = 30  # seconds$/;"	v	class:RetryRule	typeref:typename:int
runner	tests/live/test_live_cli.py	/^runner = CliRunner()$/;"	v
sam	tests/live/test_live.py	/^sam = """$/;"	v
schema	docs/examples/tutorial/episode_scraper_1.py	/^schema = {$/;"	v
schema	docs/examples/tutorial/episode_scraper_2.py	/^schema = {$/;"	v
schema	docs/examples/tutorial/episode_scraper_3.py	/^schema = {$/;"	v
schema	docs/examples/tutorial/episode_scraper_4.py	/^schema = {$/;"	v
schema	docs/examples/tutorial/episode_scraper_5.py	/^schema = {$/;"	v
schema	docs/examples/yoyodyne.py	/^schema = {"first_name": "str", "last_name": "str", "position": "str", "url": "url"}$/;"	v
scrape	src/scrapeghost/cli.py	/^def scrape($/;"	f	typeref:typename:None
scrape	src/scrapeghost/scrapers.py	/^    def scrape($/;"	m	class:PaginatedSchemaScraper	typeref:typename:ScrapeResponse
scrape	src/scrapeghost/scrapers.py	/^    def scrape($/;"	m	class:SchemaScraper	typeref:typename:ScrapeResponse
scrape_crewmember	docs/examples/pydantic_example.py	/^scrape_crewmember = SchemaScraper(schema=CrewMember)$/;"	v
scrape_legislators	examples/ilga.py	/^scrape_legislators = SchemaScraper($/;"	v
scrape_legislators	examples/legislators.py	/^scrape_legislators = SchemaScraper($/;"	v
scrapeghost	README.md	/^# scrapeghost$/;"	c
scraper	docs/examples/yoyodyne.py	/^scraper = PaginatedSchemaScraper(schema)$/;"	v
simple_page	tests/live/test_live.py	/^simple_page = """$/;"	v
sodipodi	docs/assets/scrapeghost.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg">$/;"	n	uri:http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd
stats	src/scrapeghost/apicall.py	/^    def stats(self) -> dict:$/;"	m	class:OpenAiCall	typeref:typename:dict
svg	docs/assets/scrapeghost.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg">$/;"	n	uri:http://www.w3.org/2000/svg
svg5	docs/assets/scrapeghost.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg">$/;"	i
test_anti_scrape_language	tests/live/test_live_adversarial.py	/^def test_anti_scrape_language():$/;"	f
test_apply_preprocessors_constructor	tests/test_schemascraper.py	/^def test_apply_preprocessors_constructor():$/;"	f
test_apply_preprocessors_default	tests/test_schemascraper.py	/^def test_apply_preprocessors_default():$/;"	f
test_apply_preprocessors_extra	tests/test_schemascraper.py	/^def test_apply_preprocessors_extra():$/;"	f
test_bad_json_nudge	tests/live/test_nudge_live.py	/^def test_bad_json_nudge():$/;"	f
test_basic_call	tests/test_apicall.py	/^def test_basic_call():$/;"	f
test_chunk_tags	tests/test_scraper.py	/^def test_chunk_tags():$/;"	f
test_clean_html	tests/test_preprocessors.py	/^def test_clean_html():$/;"	f
test_cli_basics	tests/live/test_live_cli.py	/^def test_cli_basics():$/;"	f
test_cli_no_schema	tests/live/test_live_cli.py	/^def test_cli_no_schema():$/;"	f
test_cli_schema_file	tests/live/test_live_cli.py	/^def test_cli_schema_file():$/;"	f
test_cost_calc	tests/test_utils.py	/^def test_cost_calc(model, pt, ct, total):$/;"	f
test_cost_estimate	tests/test_utils.py	/^def test_cost_estimate():$/;"	f
test_forced_hallucination	tests/live/test_live_adversarial.py	/^def test_forced_hallucination():$/;"	f
test_hallucination_checker	tests/test_hallucination.py	/^def test_hallucination_checker():$/;"	f
test_hallucination_checker_list	tests/test_hallucination.py	/^def test_hallucination_checker_list():$/;"	f
test_json_already_processed	tests/test_json_postprocessor.py	/^def test_json_already_processed():$/;"	f
test_json_no_nudge	tests/test_json_postprocessor.py	/^def test_json_no_nudge():$/;"	f
test_json_nudge	tests/test_json_postprocessor.py	/^def test_json_nudge():$/;"	f
test_max_cost_exceeded	tests/test_apicall.py	/^def test_max_cost_exceeded():$/;"	f
test_model_fallback	tests/test_apicall.py	/^def test_model_fallback():$/;"	f
test_model_fallback_token_limit	tests/test_apicall.py	/^def test_model_fallback_token_limit():$/;"	f
test_model_fallback_token_limit_still_too_big	tests/test_apicall.py	/^def test_model_fallback_token_limit_still_too_big():$/;"	f
test_normal_retry	tests/test_apicall.py	/^def test_normal_retry():$/;"	f
test_nudge_fails	tests/test_json_postprocessor.py	/^def test_nudge_fails():$/;"	f
test_pagination	tests/live/test_live_pagination.py	/^def test_pagination():$/;"	f
test_pagination	tests/test_pagination.py	/^def test_pagination():$/;"	f
test_parse_html	tests/test_scraper.py	/^def test_parse_html():$/;"	f
test_parse_url	tests/test_scraper.py	/^def test_parse_url():$/;"	f
test_pydantic_non_dict	tests/test_pydantic.py	/^def test_pydantic_non_dict():$/;"	f
test_pydantic_postprocessor_good	tests/test_pydantic.py	/^def test_pydantic_postprocessor_good():$/;"	f
test_pydantic_postprocessor_invalid	tests/test_pydantic.py	/^def test_pydantic_postprocessor_invalid():$/;"	f
test_pydantic_schema_scrape	tests/test_pydantic.py	/^def test_pydantic_schema_scrape():$/;"	f
test_pydantic_to_simple_schema_basics	tests/test_pydantic.py	/^def test_pydantic_to_simple_schema_basics():$/;"	f
test_pydantic_to_simple_schema_many_types	tests/test_pydantic.py	/^def test_pydantic_to_simple_schema_many_types():$/;"	f
test_pydantic_to_simple_schema_nested_model	tests/test_pydantic.py	/^def test_pydantic_to_simple_schema_nested_model():$/;"	f
test_retry_failure	tests/test_apicall.py	/^def test_retry_failure():$/;"	f
test_select_tags_css	tests/test_preprocessors.py	/^def test_select_tags_css():$/;"	f
test_select_tags_xpath	tests/test_preprocessors.py	/^def test_select_tags_xpath():$/;"	f
test_simple_html	tests/live/test_live.py	/^def test_simple_html():$/;"	f
test_simple_html_different_content	tests/live/test_live.py	/^def test_simple_html_different_content():$/;"	f
test_simple_html_split_length	tests/live/test_live.py	/^def test_simple_html_split_length():$/;"	f
test_stats	tests/test_apicall.py	/^def test_stats():$/;"	f
test_tostr	tests/test_scraper.py	/^def test_tostr():$/;"	f
total_completion_tokens	src/scrapeghost/responses.py	/^    total_completion_tokens: int = 0$/;"	v	class:Response	typeref:typename:int
total_cost	src/scrapeghost/responses.py	/^    total_cost: float = 0$/;"	v	class:Response	typeref:typename:float
total_prompt_tokens	src/scrapeghost/responses.py	/^    total_prompt_tokens: int = 0$/;"	v	class:Response	typeref:typename:int
url	docs/examples/tutorial/episode_scraper_1.py	/^url = "https:\/\/comedybangbang.fandom.com\/wiki\/Operation_Golden_Orb"$/;"	v
url	docs/examples/tutorial/episode_scraper_2.py	/^url = "https:\/\/comedybangbang.fandom.com\/wiki\/Operation_Golden_Orb"$/;"	v
url	docs/examples/tutorial/episode_scraper_3.py	/^url = "https:\/\/comedybangbang.fandom.com\/wiki\/Operation_Golden_Orb"$/;"	v
url	docs/examples/tutorial/episode_scraper_4.py	/^url = "https:\/\/www.earwolf.com\/episode\/operation-golden-orb\/"$/;"	v
url	docs/examples/tutorial/episode_scraper_5.py	/^url = "https:\/\/www.earwolf.com\/episode\/operation-golden-orb\/"$/;"	v
url	docs/examples/yoyodyne.py	/^url = "https:\/\/scrapple.fly.dev\/staff"$/;"	v
url	src/scrapeghost/responses.py	/^    url: str | None = None$/;"	v	class:ScrapeResponse	typeref:typename:str|None
